{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { postService } from '../services/api';\nimport CommentSection from '../components/CommentSection.vue';\nexport default {\n  name: 'PostDetail',\n  components: {\n    CommentSection\n  },\n  data() {\n    return {\n      post: null,\n      loading: true,\n      error: false\n    };\n  },\n  async mounted() {\n    await this.fetchPost();\n  },\n  methods: {\n    async fetchPost() {\n      try {\n        this.loading = true;\n        this.error = false;\n        const postId = this.$route.params.id;\n        const response = await postService.getPostById(postId);\n        this.post = response.data;\n      } catch (error) {\n        console.error('Error fetching post:', error);\n        this.error = true;\n      } finally {\n        this.loading = false;\n      }\n    },\n    goBack() {\n      this.$router.push('/');\n    },\n    formatDate(dateString) {\n      const date = new Date(dateString);\n      return date.toLocaleDateString('ko-KR', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n    formatContent(content) {\n      return content.replace(/\\n/g, '<br>');\n    },\n    isImage(contentType) {\n      return contentType && contentType.startsWith('image/');\n    },\n    isVideo(contentType) {\n      return contentType && contentType.startsWith('video/');\n    },\n    formatFileSize(bytes) {\n      if (bytes === 0) return '0 Bytes';\n      const k = 1024;\n      const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    },\n    openFile(url) {\n      window.open(url, '_blank');\n    },\n    onCommentsUpdated(count) {\n      console.log(`Comments updated: ${count} comments`);\n    }\n  },\n  watch: {\n    '$route'() {\n      this.fetchPost();\n    }\n  }\n};","map":{"version":3,"names":["postService","CommentSection","name","components","data","post","loading","error","mounted","fetchPost","methods","postId","$route","params","id","response","getPostById","console","goBack","$router","push","formatDate","dateString","date","Date","toLocaleDateString","year","month","day","hour","minute","formatContent","content","replace","isImage","contentType","startsWith","isVideo","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","openFile","url","window","open","onCommentsUpdated","count","watch"],"sources":["/home/ec2-user/test/frontend/src/views/PostDetail.vue"],"sourcesContent":["<template>\n  <div class=\"post-detail\">\n    <div class=\"container\">\n      <div v-if=\"loading\" class=\"loading\">Loading...</div>\n      \n      <div v-else-if=\"error\" class=\"error\">\n        <h2>Post not found</h2>\n        <p>The post you're looking for doesn't exist.</p>\n        <button @click=\"goBack\" class=\"btn-back\">Go Back</button>\n      </div>\n      \n      <div v-else class=\"post\">\n        <div class=\"post-header\">\n          <button @click=\"goBack\" class=\"btn-back\">‚Üê Back to Posts</button>\n        </div>\n        \n        <article class=\"post-content\">\n          <h1 class=\"post-title\">{{ post.title }}</h1>\n          \n          <div class=\"post-meta\">\n            <span class=\"post-date\">Created: {{ formatDate(post.createdDate) }}</span>\n            <span v-if=\"post.modifiedDate !== post.createdDate\" class=\"post-date\">\n              Modified: {{ formatDate(post.modifiedDate) }}\n            </span>\n          </div>\n          \n          <div class=\"post-body\" v-html=\"formatContent(post.content)\"></div>\n          \n          <div v-if=\"post.fileAttachments && post.fileAttachments.length > 0\" class=\"file-attachments\">\n            <h3>Attachments</h3>\n            <div class=\"attachment-grid\">\n              <div \n                v-for=\"file in post.fileAttachments\" \n                :key=\"file.id\" \n                class=\"attachment-item\"\n              >\n                <div v-if=\"isImage(file.contentType)\" class=\"image-attachment\">\n                  <img :src=\"file.s3Url\" :alt=\"file.originalFileName\" @click=\"openFile(file.s3Url)\" />\n                  <p class=\"file-name\">{{ file.originalFileName }}</p>\n                </div>\n                \n                <div v-else-if=\"isVideo(file.contentType)\" class=\"video-attachment\">\n                  <video :src=\"file.s3Url\" controls>\n                    Your browser does not support the video tag.\n                  </video>\n                  <p class=\"file-name\">{{ file.originalFileName }}</p>\n                </div>\n                \n                <div v-else class=\"document-attachment\">\n                  <div class=\"document-icon\">üìÑ</div>\n                  <div class=\"document-info\">\n                    <p class=\"file-name\">{{ file.originalFileName }}</p>\n                    <p class=\"file-size\">{{ formatFileSize(file.fileSize) }}</p>\n                    <a :href=\"file.s3Url\" target=\"_blank\" class=\"download-btn\">Download</a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </article>\n        \n        <CommentSection \n          :post-id=\"post.id\" \n          @comments-updated=\"onCommentsUpdated\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { postService } from '../services/api'\nimport CommentSection from '../components/CommentSection.vue'\n\nexport default {\n  name: 'PostDetail',\n  components: {\n    CommentSection\n  },\n  data() {\n    return {\n      post: null,\n      loading: true,\n      error: false\n    }\n  },\n  async mounted() {\n    await this.fetchPost()\n  },\n  methods: {\n    async fetchPost() {\n      try {\n        this.loading = true\n        this.error = false\n        const postId = this.$route.params.id\n        const response = await postService.getPostById(postId)\n        this.post = response.data\n      } catch (error) {\n        console.error('Error fetching post:', error)\n        this.error = true\n      } finally {\n        this.loading = false\n      }\n    },\n    goBack() {\n      this.$router.push('/')\n    },\n    formatDate(dateString) {\n      const date = new Date(dateString)\n      return date.toLocaleDateString('ko-KR', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      })\n    },\n    formatContent(content) {\n      return content.replace(/\\n/g, '<br>')\n    },\n    \n    isImage(contentType) {\n      return contentType && contentType.startsWith('image/')\n    },\n    \n    isVideo(contentType) {\n      return contentType && contentType.startsWith('video/')\n    },\n    \n    formatFileSize(bytes) {\n      if (bytes === 0) return '0 Bytes'\n      const k = 1024\n      const sizes = ['Bytes', 'KB', 'MB', 'GB']\n      const i = Math.floor(Math.log(bytes) / Math.log(k))\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n    },\n    \n    openFile(url) {\n      window.open(url, '_blank')\n    },\n    \n    onCommentsUpdated(count) {\n      console.log(`Comments updated: ${count} comments`)\n    }\n  },\n  watch: {\n    '$route'() {\n      this.fetchPost()\n    }\n  }\n}\n</script>\n\n<style scoped>\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.loading {\n  text-align: center;\n  padding: 50px 0;\n  font-size: 18px;\n  color: #7f8c8d;\n}\n\n.error {\n  text-align: center;\n  padding: 50px 0;\n}\n\n.error h2 {\n  color: #e74c3c;\n  margin-bottom: 10px;\n}\n\n.error p {\n  color: #7f8c8d;\n  margin-bottom: 20px;\n}\n\n.btn-back {\n  background-color: #95a5a6;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.3s;\n  margin-bottom: 20px;\n}\n\n.btn-back:hover {\n  background-color: #7f8c8d;\n}\n\n.post-header {\n  margin-bottom: 20px;\n}\n\n.post-content {\n  background: white;\n  border-radius: 8px;\n  padding: 30px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n}\n\n.post-title {\n  color: #2c3e50;\n  margin: 0 0 20px 0;\n  font-size: 2.5rem;\n  line-height: 1.2;\n  word-wrap: break-word;\n}\n\n.post-meta {\n  border-bottom: 2px solid #ecf0f1;\n  padding-bottom: 20px;\n  margin-bottom: 30px;\n}\n\n.post-date {\n  color: #95a5a6;\n  font-size: 0.9rem;\n  margin-right: 20px;\n}\n\n.post-body {\n  color: #2c3e50;\n  line-height: 1.8;\n  font-size: 1.1rem;\n  word-wrap: break-word;\n}\n\n.post-body ::v-deep(br) {\n  margin-bottom: 1em;\n}\n\n.file-attachments {\n  margin-top: 40px;\n  padding-top: 30px;\n  border-top: 2px solid #ecf0f1;\n}\n\n.file-attachments h3 {\n  color: #2c3e50;\n  margin: 0 0 20px 0;\n  font-size: 1.5rem;\n}\n\n.attachment-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 20px;\n}\n\n.attachment-item {\n  border: 1px solid #ecf0f1;\n  border-radius: 8px;\n  overflow: hidden;\n  transition: box-shadow 0.3s;\n}\n\n.attachment-item:hover {\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n\n.image-attachment img {\n  width: 100%;\n  height: 200px;\n  object-fit: cover;\n  cursor: pointer;\n  transition: transform 0.3s;\n}\n\n.image-attachment img:hover {\n  transform: scale(1.05);\n}\n\n.video-attachment video {\n  width: 100%;\n  height: 200px;\n}\n\n.document-attachment {\n  display: flex;\n  align-items: center;\n  padding: 20px;\n  gap: 15px;\n}\n\n.document-icon {\n  font-size: 48px;\n}\n\n.document-info {\n  flex: 1;\n}\n\n.file-name {\n  margin: 10px 0 5px 0;\n  font-weight: 500;\n  color: #2c3e50;\n  word-break: break-word;\n}\n\n.file-size {\n  margin: 0;\n  font-size: 0.9rem;\n  color: #7f8c8d;\n}\n\n.download-btn {\n  display: inline-block;\n  margin-top: 10px;\n  padding: 8px 16px;\n  background-color: #3498db;\n  color: white;\n  text-decoration: none;\n  border-radius: 4px;\n  font-size: 0.9rem;\n  transition: background-color 0.3s;\n}\n\n.download-btn:hover {\n  background-color: #2980b9;\n}\n</style>"],"mappings":";AAuEA,SAASA,WAAU,QAAS,iBAAgB;AAC5C,OAAOC,cAAa,MAAO,kCAAiC;AAE5D,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,IAAI;MACVC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE;IACT;EACF,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,SAAS,CAAC;EACvB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,SAASA,CAAA,EAAG;MAChB,IAAI;QACF,IAAI,CAACH,OAAM,GAAI,IAAG;QAClB,IAAI,CAACC,KAAI,GAAI,KAAI;QACjB,MAAMI,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAC;QACnC,MAAMC,QAAO,GAAI,MAAMf,WAAW,CAACgB,WAAW,CAACL,MAAM;QACrD,IAAI,CAACN,IAAG,GAAIU,QAAQ,CAACX,IAAG;MAC1B,EAAE,OAAOG,KAAK,EAAE;QACdU,OAAO,CAACV,KAAK,CAAC,sBAAsB,EAAEA,KAAK;QAC3C,IAAI,CAACA,KAAI,GAAI,IAAG;MAClB,UAAU;QACR,IAAI,CAACD,OAAM,GAAI,KAAI;MACrB;IACF,CAAC;IACDY,MAAMA,CAAA,EAAG;MACP,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG;IACvB,CAAC;IACDC,UAAUA,CAACC,UAAU,EAAE;MACrB,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,UAAU;MAChC,OAAOC,IAAI,CAACE,kBAAkB,CAAC,OAAO,EAAE;QACtCC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE,MAAM;QACbC,GAAG,EAAE,SAAS;QACdC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE;MACV,CAAC;IACH,CAAC;IACDC,aAAaA,CAACC,OAAO,EAAE;MACrB,OAAOA,OAAO,CAACC,OAAO,CAAC,KAAK,EAAE,MAAM;IACtC,CAAC;IAEDC,OAAOA,CAACC,WAAW,EAAE;MACnB,OAAOA,WAAU,IAAKA,WAAW,CAACC,UAAU,CAAC,QAAQ;IACvD,CAAC;IAEDC,OAAOA,CAACF,WAAW,EAAE;MACnB,OAAOA,WAAU,IAAKA,WAAW,CAACC,UAAU,CAAC,QAAQ;IACvD,CAAC;IAEDE,cAAcA,CAACC,KAAK,EAAE;MACpB,IAAIA,KAAI,KAAM,CAAC,EAAE,OAAO,SAAQ;MAChC,MAAMC,CAAA,GAAI,IAAG;MACb,MAAMC,KAAI,GAAI,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;MACxC,MAAMC,CAAA,GAAIC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAACN,KAAK,IAAII,IAAI,CAACE,GAAG,CAACL,CAAC,CAAC;MAClD,OAAOM,UAAU,CAAC,CAACP,KAAI,GAAII,IAAI,CAACI,GAAG,CAACP,CAAC,EAAEE,CAAC,CAAC,EAAEM,OAAO,CAAC,CAAC,CAAC,IAAI,GAAE,GAAIP,KAAK,CAACC,CAAC;IACxE,CAAC;IAEDO,QAAQA,CAACC,GAAG,EAAE;MACZC,MAAM,CAACC,IAAI,CAACF,GAAG,EAAE,QAAQ;IAC3B,CAAC;IAEDG,iBAAiBA,CAACC,KAAK,EAAE;MACvBrC,OAAO,CAAC4B,GAAG,CAAC,qBAAqBS,KAAK,WAAW;IACnD;EACF,CAAC;EACDC,KAAK,EAAE;IACL,QAAQ3C,CAAA,EAAG;MACT,IAAI,CAACH,SAAS,CAAC;IACjB;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}