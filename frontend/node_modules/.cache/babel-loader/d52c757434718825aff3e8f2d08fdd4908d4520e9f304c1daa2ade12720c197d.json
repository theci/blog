{"ast":null,"code":"export default {\n  name: 'FileUpload',\n  emits: ['files-selected', 'upload-complete'],\n  data() {\n    return {\n      selectedFiles: [],\n      uploadProgress: [],\n      isDragging: false\n    };\n  },\n  methods: {\n    selectFiles() {\n      this.$refs.fileInput.click();\n    },\n    handleFileSelect(event) {\n      const files = Array.from(event.target.files);\n      this.addFiles(files);\n    },\n    handleDrop(event) {\n      event.preventDefault();\n      this.isDragging = false;\n      const files = Array.from(event.dataTransfer.files);\n      this.addFiles(files);\n    },\n    handleDragOver(event) {\n      event.preventDefault();\n    },\n    handleDragEnter(event) {\n      event.preventDefault();\n      this.isDragging = true;\n    },\n    handleDragLeave(event) {\n      event.preventDefault();\n      this.isDragging = false;\n    },\n    addFiles(files) {\n      this.selectedFiles = [...this.selectedFiles, ...files];\n      this.$emit('files-selected', this.selectedFiles);\n    },\n    removeFile(index) {\n      this.selectedFiles.splice(index, 1);\n      this.$emit('files-selected', this.selectedFiles);\n    },\n    formatFileSize(bytes) {\n      if (bytes === 0) return '0 Bytes';\n      const k = 1024;\n      const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    },\n    clearFiles() {\n      this.selectedFiles = [];\n      this.uploadProgress = [];\n      this.$emit('files-selected', []);\n    }\n  }\n};","map":{"version":3,"names":["name","emits","data","selectedFiles","uploadProgress","isDragging","methods","selectFiles","$refs","fileInput","click","handleFileSelect","event","files","Array","from","target","addFiles","handleDrop","preventDefault","dataTransfer","handleDragOver","handleDragEnter","handleDragLeave","$emit","removeFile","index","splice","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","clearFiles"],"sources":["/home/ec2-user/test/frontend/src/components/FileUpload.vue"],"sourcesContent":["<template>\n  <div class=\"file-upload\">\n    <div class=\"upload-area\" @drop=\"handleDrop\" @dragover=\"handleDragOver\" @dragenter=\"handleDragEnter\" @dragleave=\"handleDragLeave\">\n      <input\n        ref=\"fileInput\"\n        type=\"file\"\n        multiple\n        @change=\"handleFileSelect\"\n        accept=\"image/*,video/*,.pdf,.doc,.docx,.txt\"\n        style=\"display: none\"\n      />\n      \n      <div class=\"upload-content\">\n        <div class=\"upload-icon\">üìÅ</div>\n        <p>Drop files here or <button type=\"button\" @click=\"selectFiles\" class=\"select-btn\">choose files</button></p>\n        <p class=\"upload-hint\">Supports: Images, Videos, PDF, Documents</p>\n      </div>\n    </div>\n    \n    <div v-if=\"selectedFiles.length > 0\" class=\"file-list\">\n      <h4>Selected Files:</h4>\n      <div class=\"file-item\" v-for=\"(file, index) in selectedFiles\" :key=\"index\">\n        <div class=\"file-info\">\n          <span class=\"file-name\">{{ file.name }}</span>\n          <span class=\"file-size\">{{ formatFileSize(file.size) }}</span>\n        </div>\n        <button type=\"button\" @click=\"removeFile(index)\" class=\"remove-btn\">√ó</button>\n      </div>\n    </div>\n    \n    <div v-if=\"uploadProgress.length > 0\" class=\"upload-progress\">\n      <h4>Upload Progress:</h4>\n      <div v-for=\"(progress, index) in uploadProgress\" :key=\"index\" class=\"progress-item\">\n        <span>{{ progress.fileName }}</span>\n        <div class=\"progress-bar\">\n          <div class=\"progress-fill\" :style=\"{ width: progress.percent + '%' }\"></div>\n        </div>\n        <span>{{ progress.percent }}%</span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'FileUpload',\n  emits: ['files-selected', 'upload-complete'],\n  data() {\n    return {\n      selectedFiles: [],\n      uploadProgress: [],\n      isDragging: false\n    }\n  },\n  methods: {\n    selectFiles() {\n      this.$refs.fileInput.click()\n    },\n    \n    handleFileSelect(event) {\n      const files = Array.from(event.target.files)\n      this.addFiles(files)\n    },\n    \n    handleDrop(event) {\n      event.preventDefault()\n      this.isDragging = false\n      const files = Array.from(event.dataTransfer.files)\n      this.addFiles(files)\n    },\n    \n    handleDragOver(event) {\n      event.preventDefault()\n    },\n    \n    handleDragEnter(event) {\n      event.preventDefault()\n      this.isDragging = true\n    },\n    \n    handleDragLeave(event) {\n      event.preventDefault()\n      this.isDragging = false\n    },\n    \n    addFiles(files) {\n      this.selectedFiles = [...this.selectedFiles, ...files]\n      this.$emit('files-selected', this.selectedFiles)\n    },\n    \n    removeFile(index) {\n      this.selectedFiles.splice(index, 1)\n      this.$emit('files-selected', this.selectedFiles)\n    },\n    \n    formatFileSize(bytes) {\n      if (bytes === 0) return '0 Bytes'\n      const k = 1024\n      const sizes = ['Bytes', 'KB', 'MB', 'GB']\n      const i = Math.floor(Math.log(bytes) / Math.log(k))\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n    },\n    \n    clearFiles() {\n      this.selectedFiles = []\n      this.uploadProgress = []\n      this.$emit('files-selected', [])\n    }\n  }\n}\n</script>\n\n<style scoped>\n.file-upload {\n  margin: 20px 0;\n}\n\n.upload-area {\n  border: 2px dashed #ddd;\n  border-radius: 8px;\n  padding: 40px;\n  text-align: center;\n  background-color: #fafafa;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.upload-area:hover {\n  border-color: #3498db;\n  background-color: #f0f9ff;\n}\n\n.upload-area.dragging {\n  border-color: #3498db;\n  background-color: #e8f4fd;\n}\n\n.upload-content {\n  pointer-events: none;\n}\n\n.upload-icon {\n  font-size: 48px;\n  margin-bottom: 16px;\n}\n\n.select-btn {\n  background: none;\n  border: none;\n  color: #3498db;\n  text-decoration: underline;\n  cursor: pointer;\n  font-size: inherit;\n  pointer-events: auto;\n}\n\n.select-btn:hover {\n  color: #2980b9;\n}\n\n.upload-hint {\n  color: #666;\n  font-size: 0.9rem;\n  margin-top: 8px;\n}\n\n.file-list {\n  margin-top: 20px;\n}\n\n.file-list h4 {\n  margin: 0 0 15px 0;\n  color: #2c3e50;\n}\n\n.file-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px;\n  background-color: #f8f9fa;\n  border-radius: 6px;\n  margin-bottom: 8px;\n}\n\n.file-info {\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n}\n\n.file-name {\n  font-weight: 500;\n  color: #2c3e50;\n}\n\n.file-size {\n  font-size: 0.9rem;\n  color: #7f8c8d;\n}\n\n.remove-btn {\n  background-color: #e74c3c;\n  color: white;\n  border: none;\n  border-radius: 50%;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n  font-size: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.remove-btn:hover {\n  background-color: #c0392b;\n}\n\n.upload-progress {\n  margin-top: 20px;\n}\n\n.upload-progress h4 {\n  margin: 0 0 15px 0;\n  color: #2c3e50;\n}\n\n.progress-item {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  margin-bottom: 10px;\n}\n\n.progress-bar {\n  flex: 1;\n  height: 8px;\n  background-color: #ecf0f1;\n  border-radius: 4px;\n  overflow: hidden;\n}\n\n.progress-fill {\n  height: 100%;\n  background-color: #3498db;\n  transition: width 0.3s ease;\n}\n</style>"],"mappings":"AA4CA,eAAe;EACbA,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE,CAAC,gBAAgB,EAAE,iBAAiB,CAAC;EAC5CC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,EAAE;MACjBC,cAAc,EAAE,EAAE;MAClBC,UAAU,EAAE;IACd;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACC,KAAK,CAACC,SAAS,CAACC,KAAK,CAAC;IAC7B,CAAC;IAEDC,gBAAgBA,CAACC,KAAK,EAAE;MACtB,MAAMC,KAAI,GAAIC,KAAK,CAACC,IAAI,CAACH,KAAK,CAACI,MAAM,CAACH,KAAK;MAC3C,IAAI,CAACI,QAAQ,CAACJ,KAAK;IACrB,CAAC;IAEDK,UAAUA,CAACN,KAAK,EAAE;MAChBA,KAAK,CAACO,cAAc,CAAC;MACrB,IAAI,CAACd,UAAS,GAAI,KAAI;MACtB,MAAMQ,KAAI,GAAIC,KAAK,CAACC,IAAI,CAACH,KAAK,CAACQ,YAAY,CAACP,KAAK;MACjD,IAAI,CAACI,QAAQ,CAACJ,KAAK;IACrB,CAAC;IAEDQ,cAAcA,CAACT,KAAK,EAAE;MACpBA,KAAK,CAACO,cAAc,CAAC;IACvB,CAAC;IAEDG,eAAeA,CAACV,KAAK,EAAE;MACrBA,KAAK,CAACO,cAAc,CAAC;MACrB,IAAI,CAACd,UAAS,GAAI,IAAG;IACvB,CAAC;IAEDkB,eAAeA,CAACX,KAAK,EAAE;MACrBA,KAAK,CAACO,cAAc,CAAC;MACrB,IAAI,CAACd,UAAS,GAAI,KAAI;IACxB,CAAC;IAEDY,QAAQA,CAACJ,KAAK,EAAE;MACd,IAAI,CAACV,aAAY,GAAI,CAAC,GAAG,IAAI,CAACA,aAAa,EAAE,GAAGU,KAAK;MACrD,IAAI,CAACW,KAAK,CAAC,gBAAgB,EAAE,IAAI,CAACrB,aAAa;IACjD,CAAC;IAEDsB,UAAUA,CAACC,KAAK,EAAE;MAChB,IAAI,CAACvB,aAAa,CAACwB,MAAM,CAACD,KAAK,EAAE,CAAC;MAClC,IAAI,CAACF,KAAK,CAAC,gBAAgB,EAAE,IAAI,CAACrB,aAAa;IACjD,CAAC;IAEDyB,cAAcA,CAACC,KAAK,EAAE;MACpB,IAAIA,KAAI,KAAM,CAAC,EAAE,OAAO,SAAQ;MAChC,MAAMC,CAAA,GAAI,IAAG;MACb,MAAMC,KAAI,GAAI,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;MACxC,MAAMC,CAAA,GAAIC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAACN,KAAK,IAAII,IAAI,CAACE,GAAG,CAACL,CAAC,CAAC;MAClD,OAAOM,UAAU,CAAC,CAACP,KAAI,GAAII,IAAI,CAACI,GAAG,CAACP,CAAC,EAAEE,CAAC,CAAC,EAAEM,OAAO,CAAC,CAAC,CAAC,IAAI,GAAE,GAAIP,KAAK,CAACC,CAAC;IACxE,CAAC;IAEDO,UAAUA,CAAA,EAAG;MACX,IAAI,CAACpC,aAAY,GAAI,EAAC;MACtB,IAAI,CAACC,cAAa,GAAI,EAAC;MACvB,IAAI,CAACoB,KAAK,CAAC,gBAAgB,EAAE,EAAE;IACjC;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}