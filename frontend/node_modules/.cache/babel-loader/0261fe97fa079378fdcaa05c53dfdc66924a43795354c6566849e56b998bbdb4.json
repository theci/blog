{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, withModifiers as _withModifiers, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"register-container\"\n};\nconst _hoisted_2 = {\n  class: \"register-form\"\n};\nconst _hoisted_3 = {\n  class: \"form-group\"\n};\nconst _hoisted_4 = {\n  class: \"form-group\"\n};\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\nconst _hoisted_6 = {\n  class: \"form-group\"\n};\nconst _hoisted_7 = {\n  class: \"form-group\"\n};\nconst _hoisted_8 = [\"disabled\"];\nconst _hoisted_9 = {\n  class: \"form-footer\"\n};\nconst _hoisted_10 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_11 = {\n  key: 1,\n  class: \"error-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[13] || (_cache[13] = _createElementVNode(\"h2\", null, \"회원가입\", -1)), _createElementVNode(\"form\", {\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => $setup.handleRegister && $setup.handleRegister(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_3, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"username\"\n  }, \"사용자명\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.userData.username = $event),\n    required: \"\",\n    placeholder: \"사용자명을 입력하세요\"\n  }, null, 512), [[_vModelText, $setup.userData.username]])]), _createElementVNode(\"div\", _hoisted_4, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"email\"\n  }, \"이메일\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.userData.email = $event),\n    required: \"\",\n    placeholder: \"이메일을 입력하세요\"\n  }, null, 512), [[_vModelText, $setup.userData.email]])]), _createElementVNode(\"div\", _hoisted_5, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", {\n    for: \"displayName\"\n  }, \"표시 이름\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"displayName\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.userData.displayName = $event),\n    placeholder: \"표시 이름을 입력하세요 (선택사항)\"\n  }, null, 512), [[_vModelText, $setup.userData.displayName]])]), _createElementVNode(\"div\", _hoisted_6, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n    for: \"password\"\n  }, \"비밀번호\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.userData.password = $event),\n    required: \"\",\n    placeholder: \"비밀번호를 입력하세요\"\n  }, null, 512), [[_vModelText, $setup.userData.password]])]), _createElementVNode(\"div\", _hoisted_7, [_cache[10] || (_cache[10] = _createElementVNode(\"label\", {\n    for: \"confirmPassword\"\n  }, \"비밀번호 확인\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"confirmPassword\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.confirmPassword = $event),\n    required: \"\",\n    placeholder: \"비밀번호를 다시 입력하세요\"\n  }, null, 512), [[_vModelText, $setup.confirmPassword]])]), _createElementVNode(\"button\", {\n    type: \"submit\",\n    disabled: $setup.loading || !$setup.isPasswordMatch,\n    class: \"register-btn\"\n  }, _toDisplayString($setup.loading ? '회원가입 중...' : '회원가입'), 9, _hoisted_8)], 32), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"p\", null, [_cache[12] || (_cache[12] = _createTextVNode(\"이미 계정이 있으신가요? \")), _createVNode(_component_router_link, {\n    to: \"/login\"\n  }, {\n    default: _withCtx(() => _cache[11] || (_cache[11] = [_createTextVNode(\"로그인\")])),\n    _: 1,\n    __: [11]\n  })])]), $setup.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, _toDisplayString($setup.error), 1)) : _createCommentVNode(\"\", true), !$setup.isPasswordMatch && $setup.confirmPassword ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, \" 비밀번호가 일치하지 않습니다. \")) : _createCommentVNode(\"\", true)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onSubmit","_cache","_withModifiers","args","$setup","handleRegister","_hoisted_3","for","type","id","userData","username","$event","required","placeholder","_hoisted_4","email","_hoisted_5","displayName","_hoisted_6","password","_hoisted_7","confirmPassword","disabled","loading","isPasswordMatch","_hoisted_8","_hoisted_9","_createVNode","_component_router_link","to","error","_hoisted_10","_toDisplayString","_hoisted_11"],"sources":["/home/ec2-user/test/frontend/src/views/Register.vue"],"sourcesContent":["<template>\n  <div class=\"register-container\">\n    <div class=\"register-form\">\n      <h2>회원가입</h2>\n      <form @submit.prevent=\"handleRegister\">\n        <div class=\"form-group\">\n          <label for=\"username\">사용자명</label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            v-model=\"userData.username\"\n            required\n            placeholder=\"사용자명을 입력하세요\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"email\">이메일</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            v-model=\"userData.email\"\n            required\n            placeholder=\"이메일을 입력하세요\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"displayName\">표시 이름</label>\n          <input\n            type=\"text\"\n            id=\"displayName\"\n            v-model=\"userData.displayName\"\n            placeholder=\"표시 이름을 입력하세요 (선택사항)\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"password\">비밀번호</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            v-model=\"userData.password\"\n            required\n            placeholder=\"비밀번호를 입력하세요\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"confirmPassword\">비밀번호 확인</label>\n          <input\n            type=\"password\"\n            id=\"confirmPassword\"\n            v-model=\"confirmPassword\"\n            required\n            placeholder=\"비밀번호를 다시 입력하세요\"\n          />\n        </div>\n        <button type=\"submit\" :disabled=\"loading || !isPasswordMatch\" class=\"register-btn\">\n          {{ loading ? '회원가입 중...' : '회원가입' }}\n        </button>\n      </form>\n      <div class=\"form-footer\">\n        <p>이미 계정이 있으신가요? <router-link to=\"/login\">로그인</router-link></p>\n      </div>\n      <div v-if=\"error\" class=\"error-message\">\n        {{ error }}\n      </div>\n      <div v-if=\"!isPasswordMatch && confirmPassword\" class=\"error-message\">\n        비밀번호가 일치하지 않습니다.\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { authStore } from '../store/auth'\n\nexport default {\n  name: 'Register',\n  setup() {\n    const router = useRouter()\n    const userData = ref({\n      username: '',\n      email: '',\n      displayName: '',\n      password: ''\n    })\n    const confirmPassword = ref('')\n    const loading = ref(false)\n    const error = ref('')\n\n    const isPasswordMatch = computed(() => {\n      return !confirmPassword.value || userData.value.password === confirmPassword.value\n    })\n\n    const handleRegister = async () => {\n      if (!isPasswordMatch.value) {\n        error.value = '비밀번호가 일치하지 않습니다.'\n        return\n      }\n\n      loading.value = true\n      error.value = ''\n      \n      try {\n        await authStore.register(userData.value)\n        router.push('/')\n      } catch (err) {\n        if (err.response?.status === 400) {\n          error.value = '이미 존재하는 사용자명 또는 이메일입니다.'\n        } else {\n          error.value = '회원가입에 실패했습니다. 다시 시도해주세요.'\n        }\n      } finally {\n        loading.value = false\n      }\n    }\n\n    return {\n      userData,\n      confirmPassword,\n      loading,\n      error,\n      isPasswordMatch,\n      handleRegister\n    }\n  }\n}\n</script>\n\n<style scoped>\n.register-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 80vh;\n  padding: 20px;\n}\n\n.register-form {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  width: 100%;\n  max-width: 400px;\n}\n\n.register-form h2 {\n  text-align: center;\n  margin-bottom: 1.5rem;\n  color: #2c3e50;\n}\n\n.form-group {\n  margin-bottom: 1rem;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 0.5rem;\n  color: #555;\n  font-weight: 500;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 0.75rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  box-sizing: border-box;\n}\n\n.form-group input:focus {\n  outline: none;\n  border-color: #3498db;\n  box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.2);\n}\n\n.register-btn {\n  width: 100%;\n  padding: 0.75rem;\n  background-color: #27ae60;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.register-btn:hover:not(:disabled) {\n  background-color: #229954;\n}\n\n.register-btn:disabled {\n  background-color: #bdc3c7;\n  cursor: not-allowed;\n}\n\n.form-footer {\n  text-align: center;\n  margin-top: 1rem;\n}\n\n.form-footer a {\n  color: #3498db;\n  text-decoration: none;\n}\n\n.form-footer a:hover {\n  text-decoration: underline;\n}\n\n.error-message {\n  background-color: #e74c3c;\n  color: white;\n  padding: 0.75rem;\n  border-radius: 4px;\n  margin-top: 1rem;\n  text-align: center;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}