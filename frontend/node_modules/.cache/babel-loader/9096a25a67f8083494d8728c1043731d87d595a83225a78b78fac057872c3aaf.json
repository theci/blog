{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"post-list\"\n};\nconst _hoisted_2 = {\n  class: \"container\"\n};\nconst _hoisted_3 = {\n  class: \"header\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"loading\"\n};\nconst _hoisted_5 = {\n  key: 1,\n  class: \"no-posts\"\n};\nconst _hoisted_6 = {\n  key: 2,\n  class: \"posts-grid\"\n};\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  class: \"post-title\"\n};\nconst _hoisted_9 = {\n  class: \"post-content\"\n};\nconst _hoisted_10 = {\n  class: \"post-meta\"\n};\nconst _hoisted_11 = {\n  class: \"post-date\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[1] || (_cache[1] = _createElementVNode(\"h1\", null, \"Blog Posts\", -1)), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goToCreate && $options.goToCreate(...args)),\n    class: \"btn-create\"\n  }, \"Write New Post\")]), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \"Loading...\")) : $data.posts.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \" No posts available. Create your first post! \")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.posts, post => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: post.id,\n      class: \"post-card\",\n      onClick: $event => $options.goToDetail(post.id)\n    }, [_createElementVNode(\"h3\", _hoisted_8, _toDisplayString(post.title), 1), _createElementVNode(\"p\", _hoisted_9, _toDisplayString($options.truncateContent(post.content)), 1), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"span\", _hoisted_11, _toDisplayString($options.formatDate(post.createdDate)), 1)])], 8, _hoisted_7);\n  }), 128))]))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","onClick","_cache","args","$options","goToCreate","$data","loading","_hoisted_4","posts","length","_hoisted_5","_hoisted_6","_Fragment","_renderList","post","key","id","$event","goToDetail","_hoisted_8","_toDisplayString","title","_hoisted_9","truncateContent","content","_hoisted_10","_hoisted_11","formatDate","createdDate"],"sources":["/home/ec2-user/test/frontend/src/views/PostList.vue"],"sourcesContent":["<template>\n  <div class=\"post-list\">\n    <div class=\"container\">\n      <div class=\"header\">\n        <h1>Blog Posts</h1>\n        <button @click=\"goToCreate\" class=\"btn-create\">Write New Post</button>\n      </div>\n      \n      <div v-if=\"loading\" class=\"loading\">Loading...</div>\n      \n      <div v-else-if=\"posts.length === 0\" class=\"no-posts\">\n        No posts available. Create your first post!\n      </div>\n      \n      <div v-else class=\"posts-grid\">\n        <div \n          v-for=\"post in posts\" \n          :key=\"post.id\" \n          class=\"post-card\"\n          @click=\"goToDetail(post.id)\"\n        >\n          <h3 class=\"post-title\">{{ post.title }}</h3>\n          <p class=\"post-content\">{{ truncateContent(post.content) }}</p>\n          <div class=\"post-meta\">\n            <span class=\"post-date\">{{ formatDate(post.createdDate) }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { postService } from '../services/api'\n\nexport default {\n  name: 'PostList',\n  data() {\n    return {\n      posts: [],\n      loading: true\n    }\n  },\n  async mounted() {\n    await this.fetchPosts()\n  },\n  methods: {\n    async fetchPosts() {\n      try {\n        this.loading = true\n        const response = await postService.getAllPosts()\n        this.posts = response.data\n      } catch (error) {\n        console.error('Error fetching posts:', error)\n      } finally {\n        this.loading = false\n      }\n    },\n    goToDetail(id) {\n      this.$router.push(`/post/${id}`)\n    },\n    goToCreate() {\n      this.$router.push('/create')\n    },\n    truncateContent(content) {\n      return content.length > 150 ? content.substring(0, 150) + '...' : content\n    },\n    formatDate(dateString) {\n      const date = new Date(dateString)\n      return date.toLocaleDateString('ko-KR', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 30px;\n}\n\n.header h1 {\n  color: #2c3e50;\n  margin: 0;\n}\n\n.btn-create {\n  background-color: #3498db;\n  color: white;\n  border: none;\n  padding: 12px 24px;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 16px;\n  transition: background-color 0.3s;\n}\n\n.btn-create:hover {\n  background-color: #2980b9;\n}\n\n.loading {\n  text-align: center;\n  padding: 50px 0;\n  font-size: 18px;\n  color: #7f8c8d;\n}\n\n.no-posts {\n  text-align: center;\n  padding: 50px 0;\n  font-size: 18px;\n  color: #7f8c8d;\n}\n\n.posts-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 20px;\n}\n\n.post-card {\n  background: white;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  cursor: pointer;\n  transition: transform 0.2s, box-shadow 0.2s;\n}\n\n.post-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\n}\n\n.post-title {\n  margin: 0 0 10px 0;\n  color: #2c3e50;\n  font-size: 1.4rem;\n  line-height: 1.3;\n}\n\n.post-content {\n  color: #7f8c8d;\n  line-height: 1.5;\n  margin: 0 0 15px 0;\n}\n\n.post-meta {\n  border-top: 1px solid #ecf0f1;\n  padding-top: 10px;\n}\n\n.post-date {\n  color: #95a5a6;\n  font-size: 0.9rem;\n}\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAQ;;;EAKCA,KAAK,EAAC;;;;EAEUA,KAAK,EAAC;;;;EAI9BA,KAAK,EAAC;;;;EAOVA,KAAK,EAAC;AAAY;;EACnBA,KAAK,EAAC;AAAc;;EAClBA,KAAK,EAAC;AAAW;;EACdA,KAAK,EAAC;AAAW;;uBAvBjCC,mBAAA,CA4BM,OA5BNC,UA4BM,GA3BJC,mBAAA,CA0BM,OA1BNC,UA0BM,GAzBJD,mBAAA,CAGM,OAHNE,UAGM,G,0BAFJF,mBAAA,CAAmB,YAAf,YAAU,QACdA,mBAAA,CAAsE;IAA7DG,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;IAAER,KAAK,EAAC;KAAa,gBAAc,E,GAGpDW,KAAA,CAAAC,OAAO,I,cAAlBX,mBAAA,CAAoD,OAApDY,UAAoD,EAAhB,YAAU,KAE9BF,KAAA,CAAAG,KAAK,CAACC,MAAM,U,cAA5Bd,mBAAA,CAEM,OAFNe,UAEM,EAF+C,+CAErD,M,cAEAf,mBAAA,CAaM,OAbNgB,UAaM,I,kBAZJhB,mBAAA,CAWMiB,SAAA,QAAAC,WAAA,CAVWR,KAAA,CAAAG,KAAK,EAAbM,IAAI;yBADbnB,mBAAA,CAWM;MATHoB,GAAG,EAAED,IAAI,CAACE,EAAE;MACbtB,KAAK,EAAC,WAAW;MAChBM,OAAK,EAAAiB,MAAA,IAAEd,QAAA,CAAAe,UAAU,CAACJ,IAAI,CAACE,EAAE;QAE1BnB,mBAAA,CAA4C,MAA5CsB,UAA4C,EAAAC,gBAAA,CAAlBN,IAAI,CAACO,KAAK,OACpCxB,mBAAA,CAA+D,KAA/DyB,UAA+D,EAAAF,gBAAA,CAApCjB,QAAA,CAAAoB,eAAe,CAACT,IAAI,CAACU,OAAO,QACvD3B,mBAAA,CAEM,OAFN4B,WAEM,GADJ5B,mBAAA,CAAiE,QAAjE6B,WAAiE,EAAAN,gBAAA,CAAtCjB,QAAA,CAAAwB,UAAU,CAACb,IAAI,CAACc,WAAW,O","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}